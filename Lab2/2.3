import pandas as pd
import numpy as np
from sklearn.metrics import mean_absolute_percentage_error
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

def replaceOutliers(y_train):
    outliers = np.abs((y_train - y_train.mean()) / y_train.std()) > 3
    y_train_out = y_train.copy()
    y_train_out[outliers] = y_train.mean()
    return y_train_out

def regression(X, y, n):
    result = np.zeros(n)
    for i in range(n):
        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
        model = LinearRegression()
        y_train = replaceOutliers(y_train)
        model.fit(X_train, y_train)
        y_pred = model.predict(X_test)
        result[i] = mean_absolute_percentage_error(y_test, y_pred)
    return result.mean()

data = pd.read_csv('practice_lab_2.csv', sep=';')
columns = data.columns.to_list()
val = data.values
X, y = val[:, :-1], val[:, -1]

print(regression(X, y, 74))
